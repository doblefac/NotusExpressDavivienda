'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace NotusIlsService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="NotusIlsServiceSoap", [Namespace]:="http://www.logytechmobile.com/NotusIlsWebService/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Object()))>  _
    Partial Public Class NotusIlsService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ConsultarCampaniasCEMOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistrarServicioWSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarServicioWSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarServicioWSeMergiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AgregarReferenciasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarReferenciasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCapacidadEntregaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDisponibilidadDocumentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidaRegistrosServicioWSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarClientesExternosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarBodegasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarProductosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarTipoCampaniasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarServiciosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDocumentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCampaniaBodegaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCampaniaProductoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCampaniaDocumentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistrarCampaniaWSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarCampaniaWSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargarInformacionTipoServicioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GuardarCodigoEstrategiaWsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarCodigoEstrategiaWsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarCodigoEstrategiaWsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AsociarCodigoEstrategiaWsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCiudadesCampaniaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.NotusExpressBusinessLayer.My.MySettings.Default.NotusExpressBusinessLayer_NotusIlsService_NotusIlsService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ConsultarCampaniasCEMCompleted As ConsultarCampaniasCEMCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistrarServicioWSCompleted As RegistrarServicioWSCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarServicioWSCompleted As ActualizarServicioWSCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarServicioWSeMergiaCompleted As ActualizarServicioWSeMergiaCompletedEventHandler
        
        '''<remarks/>
        Public Event AgregarReferenciasCompleted As AgregarReferenciasCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarReferenciasCompleted As EliminarReferenciasCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCapacidadEntregaCompleted As ConsultarCapacidadEntregaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDisponibilidadDocumentosCompleted As ConsultarDisponibilidadDocumentosCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidaRegistrosServicioWSCompleted As ValidaRegistrosServicioWSCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarClientesExternosCompleted As ConsultarClientesExternosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarBodegasCompleted As ConsultarBodegasCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarProductosCompleted As ConsultarProductosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarTipoCampaniasCompleted As ConsultarTipoCampaniasCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarServiciosCompleted As ConsultarServiciosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDocumentosCompleted As ConsultarDocumentosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCampaniaBodegaCompleted As ConsultarCampaniaBodegaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCampaniaProductoCompleted As ConsultarCampaniaProductoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCampaniaDocumentoCompleted As ConsultarCampaniaDocumentoCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistrarCampaniaWSCompleted As RegistrarCampaniaWSCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarCampaniaWSCompleted As ActualizarCampaniaWSCompletedEventHandler
        
        '''<remarks/>
        Public Event CargarInformacionTipoServicioCompleted As CargarInformacionTipoServicioCompletedEventHandler
        
        '''<remarks/>
        Public Event GuardarCodigoEstrategiaWsCompleted As GuardarCodigoEstrategiaWsCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarCodigoEstrategiaWsCompleted As ActualizarCodigoEstrategiaWsCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarCodigoEstrategiaWsCompleted As EliminarCodigoEstrategiaWsCompletedEventHandler
        
        '''<remarks/>
        Public Event AsociarCodigoEstrategiaWsCompleted As AsociarCodigoEstrategiaWsCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCiudadesCampaniaCompleted As ConsultarCiudadesCampaniaCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ConsultarCampaniasCEM", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCampaniasCEM(ByVal infoFiltros As WsFiltroCampania, ByRef dsReporte As System.Data.DataSet) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ConsultarCampaniasCEM", New Object() {infoFiltros, dsReporte})
            dsReporte = CType(results(1),System.Data.DataSet)
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCampaniasCEMAsync(ByVal infoFiltros As WsFiltroCampania, ByVal dsReporte As System.Data.DataSet)
            Me.ConsultarCampaniasCEMAsync(infoFiltros, dsReporte, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCampaniasCEMAsync(ByVal infoFiltros As WsFiltroCampania, ByVal dsReporte As System.Data.DataSet, ByVal userState As Object)
            If (Me.ConsultarCampaniasCEMOperationCompleted Is Nothing) Then
                Me.ConsultarCampaniasCEMOperationCompleted = AddressOf Me.OnConsultarCampaniasCEMOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCampaniasCEM", New Object() {infoFiltros, dsReporte}, Me.ConsultarCampaniasCEMOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCampaniasCEMOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCampaniasCEMCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCampaniasCEMCompleted(Me, New ConsultarCampaniasCEMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/RegistrarServicioWS", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistrarServicioWS(ByVal infoServicio As WsRegistroServicioMensajeria, ByRef idServicio As Long) As ResultadoProceso
            Dim results() As Object = Me.Invoke("RegistrarServicioWS", New Object() {infoServicio, idServicio})
            idServicio = CType(results(1),Long)
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistrarServicioWSAsync(ByVal infoServicio As WsRegistroServicioMensajeria, ByVal idServicio As Long)
            Me.RegistrarServicioWSAsync(infoServicio, idServicio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistrarServicioWSAsync(ByVal infoServicio As WsRegistroServicioMensajeria, ByVal idServicio As Long, ByVal userState As Object)
            If (Me.RegistrarServicioWSOperationCompleted Is Nothing) Then
                Me.RegistrarServicioWSOperationCompleted = AddressOf Me.OnRegistrarServicioWSOperationCompleted
            End If
            Me.InvokeAsync("RegistrarServicioWS", New Object() {infoServicio, idServicio}, Me.RegistrarServicioWSOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistrarServicioWSOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistrarServicioWSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistrarServicioWSCompleted(Me, New RegistrarServicioWSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ActualizarServicioWS", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizarServicioWS(ByVal infoServicio As WsRegistroServicioMensajeria) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ActualizarServicioWS", New Object() {infoServicio})
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizarServicioWSAsync(ByVal infoServicio As WsRegistroServicioMensajeria)
            Me.ActualizarServicioWSAsync(infoServicio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarServicioWSAsync(ByVal infoServicio As WsRegistroServicioMensajeria, ByVal userState As Object)
            If (Me.ActualizarServicioWSOperationCompleted Is Nothing) Then
                Me.ActualizarServicioWSOperationCompleted = AddressOf Me.OnActualizarServicioWSOperationCompleted
            End If
            Me.InvokeAsync("ActualizarServicioWS", New Object() {infoServicio}, Me.ActualizarServicioWSOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarServicioWSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarServicioWSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarServicioWSCompleted(Me, New ActualizarServicioWSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ActualizarServicioWSeMergia", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizarServicioWSeMergia(ByVal infoServicio As WsRegistroServicioMensajeriaEmergia) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ActualizarServicioWSeMergia", New Object() {infoServicio})
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizarServicioWSeMergiaAsync(ByVal infoServicio As WsRegistroServicioMensajeriaEmergia)
            Me.ActualizarServicioWSeMergiaAsync(infoServicio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarServicioWSeMergiaAsync(ByVal infoServicio As WsRegistroServicioMensajeriaEmergia, ByVal userState As Object)
            If (Me.ActualizarServicioWSeMergiaOperationCompleted Is Nothing) Then
                Me.ActualizarServicioWSeMergiaOperationCompleted = AddressOf Me.OnActualizarServicioWSeMergiaOperationCompleted
            End If
            Me.InvokeAsync("ActualizarServicioWSeMergia", New Object() {infoServicio}, Me.ActualizarServicioWSeMergiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarServicioWSeMergiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarServicioWSeMergiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarServicioWSeMergiaCompleted(Me, New ActualizarServicioWSeMergiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/AgregarReferencias", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AgregarReferencias(ByVal infoServicio As WsRegistroServicioMensajeria) As ResultadoProceso
            Dim results() As Object = Me.Invoke("AgregarReferencias", New Object() {infoServicio})
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AgregarReferenciasAsync(ByVal infoServicio As WsRegistroServicioMensajeria)
            Me.AgregarReferenciasAsync(infoServicio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AgregarReferenciasAsync(ByVal infoServicio As WsRegistroServicioMensajeria, ByVal userState As Object)
            If (Me.AgregarReferenciasOperationCompleted Is Nothing) Then
                Me.AgregarReferenciasOperationCompleted = AddressOf Me.OnAgregarReferenciasOperationCompleted
            End If
            Me.InvokeAsync("AgregarReferencias", New Object() {infoServicio}, Me.AgregarReferenciasOperationCompleted, userState)
        End Sub
        
        Private Sub OnAgregarReferenciasOperationCompleted(ByVal arg As Object)
            If (Not (Me.AgregarReferenciasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AgregarReferenciasCompleted(Me, New AgregarReferenciasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/EliminarReferencias", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarReferencias(ByVal infoServicio As WsRegistroServicioMensajeria) As ResultadoProceso
            Dim results() As Object = Me.Invoke("EliminarReferencias", New Object() {infoServicio})
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarReferenciasAsync(ByVal infoServicio As WsRegistroServicioMensajeria)
            Me.EliminarReferenciasAsync(infoServicio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarReferenciasAsync(ByVal infoServicio As WsRegistroServicioMensajeria, ByVal userState As Object)
            If (Me.EliminarReferenciasOperationCompleted Is Nothing) Then
                Me.EliminarReferenciasOperationCompleted = AddressOf Me.OnEliminarReferenciasOperationCompleted
            End If
            Me.InvokeAsync("EliminarReferencias", New Object() {infoServicio}, Me.EliminarReferenciasOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarReferenciasOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarReferenciasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarReferenciasCompleted(Me, New EliminarReferenciasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ConsultarCapacidadEntrega", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCapacidadEntrega(ByVal infoCapacidad As WsInfoCapacidadEntrega, ByRef dsCantidad As System.Data.DataSet) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ConsultarCapacidadEntrega", New Object() {infoCapacidad, dsCantidad})
            dsCantidad = CType(results(1),System.Data.DataSet)
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCapacidadEntregaAsync(ByVal infoCapacidad As WsInfoCapacidadEntrega, ByVal dsCantidad As System.Data.DataSet)
            Me.ConsultarCapacidadEntregaAsync(infoCapacidad, dsCantidad, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCapacidadEntregaAsync(ByVal infoCapacidad As WsInfoCapacidadEntrega, ByVal dsCantidad As System.Data.DataSet, ByVal userState As Object)
            If (Me.ConsultarCapacidadEntregaOperationCompleted Is Nothing) Then
                Me.ConsultarCapacidadEntregaOperationCompleted = AddressOf Me.OnConsultarCapacidadEntregaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCapacidadEntrega", New Object() {infoCapacidad, dsCantidad}, Me.ConsultarCapacidadEntregaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCapacidadEntregaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCapacidadEntregaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCapacidadEntregaCompleted(Me, New ConsultarCapacidadEntregaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ConsultarDisponibilidadDocumento"& _ 
            "s", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDisponibilidadDocumentos(ByVal infoDisponibilidad As WsInfoDisponibilidad, ByRef dsDisponibilidad As System.Data.DataSet) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ConsultarDisponibilidadDocumentos", New Object() {infoDisponibilidad, dsDisponibilidad})
            dsDisponibilidad = CType(results(1),System.Data.DataSet)
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDisponibilidadDocumentosAsync(ByVal infoDisponibilidad As WsInfoDisponibilidad, ByVal dsDisponibilidad As System.Data.DataSet)
            Me.ConsultarDisponibilidadDocumentosAsync(infoDisponibilidad, dsDisponibilidad, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDisponibilidadDocumentosAsync(ByVal infoDisponibilidad As WsInfoDisponibilidad, ByVal dsDisponibilidad As System.Data.DataSet, ByVal userState As Object)
            If (Me.ConsultarDisponibilidadDocumentosOperationCompleted Is Nothing) Then
                Me.ConsultarDisponibilidadDocumentosOperationCompleted = AddressOf Me.OnConsultarDisponibilidadDocumentosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDisponibilidadDocumentos", New Object() {infoDisponibilidad, dsDisponibilidad}, Me.ConsultarDisponibilidadDocumentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDisponibilidadDocumentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDisponibilidadDocumentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDisponibilidadDocumentosCompleted(Me, New ConsultarDisponibilidadDocumentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ValidaRegistrosServicioWS", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidaRegistrosServicioWS(ByVal infoServicio As WsRegistroServicioMensajeria) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ValidaRegistrosServicioWS", New Object() {infoServicio})
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidaRegistrosServicioWSAsync(ByVal infoServicio As WsRegistroServicioMensajeria)
            Me.ValidaRegistrosServicioWSAsync(infoServicio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidaRegistrosServicioWSAsync(ByVal infoServicio As WsRegistroServicioMensajeria, ByVal userState As Object)
            If (Me.ValidaRegistrosServicioWSOperationCompleted Is Nothing) Then
                Me.ValidaRegistrosServicioWSOperationCompleted = AddressOf Me.OnValidaRegistrosServicioWSOperationCompleted
            End If
            Me.InvokeAsync("ValidaRegistrosServicioWS", New Object() {infoServicio}, Me.ValidaRegistrosServicioWSOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidaRegistrosServicioWSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidaRegistrosServicioWSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidaRegistrosServicioWSCompleted(Me, New ValidaRegistrosServicioWSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ConsultarClientesExternos", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarClientesExternos(ByRef dsReporte As System.Data.DataSet, ByRef estado As Boolean, ByRef idEmpresa As Integer) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ConsultarClientesExternos", New Object() {dsReporte, estado, idEmpresa})
            dsReporte = CType(results(1),System.Data.DataSet)
            estado = CType(results(2),Boolean)
            idEmpresa = CType(results(3),Integer)
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarClientesExternosAsync(ByVal dsReporte As System.Data.DataSet, ByVal estado As Boolean, ByVal idEmpresa As Integer)
            Me.ConsultarClientesExternosAsync(dsReporte, estado, idEmpresa, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarClientesExternosAsync(ByVal dsReporte As System.Data.DataSet, ByVal estado As Boolean, ByVal idEmpresa As Integer, ByVal userState As Object)
            If (Me.ConsultarClientesExternosOperationCompleted Is Nothing) Then
                Me.ConsultarClientesExternosOperationCompleted = AddressOf Me.OnConsultarClientesExternosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarClientesExternos", New Object() {dsReporte, estado, idEmpresa}, Me.ConsultarClientesExternosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarClientesExternosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarClientesExternosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarClientesExternosCompleted(Me, New ConsultarClientesExternosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ConsultarBodegas", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarBodegas(ByRef dsDatos As System.Data.DataSet) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ConsultarBodegas", New Object() {dsDatos})
            dsDatos = CType(results(1),System.Data.DataSet)
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarBodegasAsync(ByVal dsDatos As System.Data.DataSet)
            Me.ConsultarBodegasAsync(dsDatos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarBodegasAsync(ByVal dsDatos As System.Data.DataSet, ByVal userState As Object)
            If (Me.ConsultarBodegasOperationCompleted Is Nothing) Then
                Me.ConsultarBodegasOperationCompleted = AddressOf Me.OnConsultarBodegasOperationCompleted
            End If
            Me.InvokeAsync("ConsultarBodegas", New Object() {dsDatos}, Me.ConsultarBodegasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarBodegasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarBodegasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarBodegasCompleted(Me, New ConsultarBodegasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ConsultarProductos", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarProductos(ByRef dsDatos As System.Data.DataSet, ByVal pListIdClienteExterno() As Integer) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ConsultarProductos", New Object() {dsDatos, pListIdClienteExterno})
            dsDatos = CType(results(1),System.Data.DataSet)
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarProductosAsync(ByVal dsDatos As System.Data.DataSet, ByVal pListIdClienteExterno() As Integer)
            Me.ConsultarProductosAsync(dsDatos, pListIdClienteExterno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarProductosAsync(ByVal dsDatos As System.Data.DataSet, ByVal pListIdClienteExterno() As Integer, ByVal userState As Object)
            If (Me.ConsultarProductosOperationCompleted Is Nothing) Then
                Me.ConsultarProductosOperationCompleted = AddressOf Me.OnConsultarProductosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarProductos", New Object() {dsDatos, pListIdClienteExterno}, Me.ConsultarProductosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarProductosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarProductosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarProductosCompleted(Me, New ConsultarProductosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ConsultarTipoCampanias", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarTipoCampanias(ByRef dsReporte As System.Data.DataSet, ByRef estado As Boolean) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ConsultarTipoCampanias", New Object() {dsReporte, estado})
            dsReporte = CType(results(1),System.Data.DataSet)
            estado = CType(results(2),Boolean)
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipoCampaniasAsync(ByVal dsReporte As System.Data.DataSet, ByVal estado As Boolean)
            Me.ConsultarTipoCampaniasAsync(dsReporte, estado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipoCampaniasAsync(ByVal dsReporte As System.Data.DataSet, ByVal estado As Boolean, ByVal userState As Object)
            If (Me.ConsultarTipoCampaniasOperationCompleted Is Nothing) Then
                Me.ConsultarTipoCampaniasOperationCompleted = AddressOf Me.OnConsultarTipoCampaniasOperationCompleted
            End If
            Me.InvokeAsync("ConsultarTipoCampanias", New Object() {dsReporte, estado}, Me.ConsultarTipoCampaniasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarTipoCampaniasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarTipoCampaniasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarTipoCampaniasCompleted(Me, New ConsultarTipoCampaniasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ConsultarServicios", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarServicios(ByRef dsReporte As System.Data.DataSet, ByRef _esFinanciero As Boolean) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ConsultarServicios", New Object() {dsReporte, _esFinanciero})
            dsReporte = CType(results(1),System.Data.DataSet)
            _esFinanciero = CType(results(2),Boolean)
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarServiciosAsync(ByVal dsReporte As System.Data.DataSet, ByVal _esFinanciero As Boolean)
            Me.ConsultarServiciosAsync(dsReporte, _esFinanciero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarServiciosAsync(ByVal dsReporte As System.Data.DataSet, ByVal _esFinanciero As Boolean, ByVal userState As Object)
            If (Me.ConsultarServiciosOperationCompleted Is Nothing) Then
                Me.ConsultarServiciosOperationCompleted = AddressOf Me.OnConsultarServiciosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarServicios", New Object() {dsReporte, _esFinanciero}, Me.ConsultarServiciosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarServiciosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarServiciosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarServiciosCompleted(Me, New ConsultarServiciosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ConsultarDocumentos", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDocumentos(ByRef dsReporte As System.Data.DataSet) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ConsultarDocumentos", New Object() {dsReporte})
            dsReporte = CType(results(1),System.Data.DataSet)
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDocumentosAsync(ByVal dsReporte As System.Data.DataSet)
            Me.ConsultarDocumentosAsync(dsReporte, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDocumentosAsync(ByVal dsReporte As System.Data.DataSet, ByVal userState As Object)
            If (Me.ConsultarDocumentosOperationCompleted Is Nothing) Then
                Me.ConsultarDocumentosOperationCompleted = AddressOf Me.OnConsultarDocumentosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDocumentos", New Object() {dsReporte}, Me.ConsultarDocumentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDocumentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDocumentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDocumentosCompleted(Me, New ConsultarDocumentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ConsultarCampaniaBodega", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCampaniaBodega(ByRef dsDatos As System.Data.DataSet, ByRef idCampania As Integer) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ConsultarCampaniaBodega", New Object() {dsDatos, idCampania})
            dsDatos = CType(results(1),System.Data.DataSet)
            idCampania = CType(results(2),Integer)
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCampaniaBodegaAsync(ByVal dsDatos As System.Data.DataSet, ByVal idCampania As Integer)
            Me.ConsultarCampaniaBodegaAsync(dsDatos, idCampania, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCampaniaBodegaAsync(ByVal dsDatos As System.Data.DataSet, ByVal idCampania As Integer, ByVal userState As Object)
            If (Me.ConsultarCampaniaBodegaOperationCompleted Is Nothing) Then
                Me.ConsultarCampaniaBodegaOperationCompleted = AddressOf Me.OnConsultarCampaniaBodegaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCampaniaBodega", New Object() {dsDatos, idCampania}, Me.ConsultarCampaniaBodegaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCampaniaBodegaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCampaniaBodegaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCampaniaBodegaCompleted(Me, New ConsultarCampaniaBodegaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ConsultarCampaniaProducto", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCampaniaProducto(ByRef dsDatos As System.Data.DataSet, ByRef idCampania As Integer, ByRef tipoProducto As Boolean) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ConsultarCampaniaProducto", New Object() {dsDatos, idCampania, tipoProducto})
            dsDatos = CType(results(1),System.Data.DataSet)
            idCampania = CType(results(2),Integer)
            tipoProducto = CType(results(3),Boolean)
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCampaniaProductoAsync(ByVal dsDatos As System.Data.DataSet, ByVal idCampania As Integer, ByVal tipoProducto As Boolean)
            Me.ConsultarCampaniaProductoAsync(dsDatos, idCampania, tipoProducto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCampaniaProductoAsync(ByVal dsDatos As System.Data.DataSet, ByVal idCampania As Integer, ByVal tipoProducto As Boolean, ByVal userState As Object)
            If (Me.ConsultarCampaniaProductoOperationCompleted Is Nothing) Then
                Me.ConsultarCampaniaProductoOperationCompleted = AddressOf Me.OnConsultarCampaniaProductoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCampaniaProducto", New Object() {dsDatos, idCampania, tipoProducto}, Me.ConsultarCampaniaProductoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCampaniaProductoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCampaniaProductoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCampaniaProductoCompleted(Me, New ConsultarCampaniaProductoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ConsultarCampaniaDocumento", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCampaniaDocumento(ByRef dsDatos As System.Data.DataSet, ByRef idCampania As Integer) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ConsultarCampaniaDocumento", New Object() {dsDatos, idCampania})
            dsDatos = CType(results(1),System.Data.DataSet)
            idCampania = CType(results(2),Integer)
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCampaniaDocumentoAsync(ByVal dsDatos As System.Data.DataSet, ByVal idCampania As Integer)
            Me.ConsultarCampaniaDocumentoAsync(dsDatos, idCampania, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCampaniaDocumentoAsync(ByVal dsDatos As System.Data.DataSet, ByVal idCampania As Integer, ByVal userState As Object)
            If (Me.ConsultarCampaniaDocumentoOperationCompleted Is Nothing) Then
                Me.ConsultarCampaniaDocumentoOperationCompleted = AddressOf Me.OnConsultarCampaniaDocumentoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCampaniaDocumento", New Object() {dsDatos, idCampania}, Me.ConsultarCampaniaDocumentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCampaniaDocumentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCampaniaDocumentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCampaniaDocumentoCompleted(Me, New ConsultarCampaniaDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/RegistrarCampaniaWS", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistrarCampaniaWS(ByVal infoCampania As WsRegistroCampania) As ResultadoProceso
            Dim results() As Object = Me.Invoke("RegistrarCampaniaWS", New Object() {infoCampania})
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistrarCampaniaWSAsync(ByVal infoCampania As WsRegistroCampania)
            Me.RegistrarCampaniaWSAsync(infoCampania, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistrarCampaniaWSAsync(ByVal infoCampania As WsRegistroCampania, ByVal userState As Object)
            If (Me.RegistrarCampaniaWSOperationCompleted Is Nothing) Then
                Me.RegistrarCampaniaWSOperationCompleted = AddressOf Me.OnRegistrarCampaniaWSOperationCompleted
            End If
            Me.InvokeAsync("RegistrarCampaniaWS", New Object() {infoCampania}, Me.RegistrarCampaniaWSOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistrarCampaniaWSOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistrarCampaniaWSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistrarCampaniaWSCompleted(Me, New RegistrarCampaniaWSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ActualizarCampaniaWS", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizarCampaniaWS(ByVal infoCampania As WsRegistroCampania) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ActualizarCampaniaWS", New Object() {infoCampania})
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizarCampaniaWSAsync(ByVal infoCampania As WsRegistroCampania)
            Me.ActualizarCampaniaWSAsync(infoCampania, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarCampaniaWSAsync(ByVal infoCampania As WsRegistroCampania, ByVal userState As Object)
            If (Me.ActualizarCampaniaWSOperationCompleted Is Nothing) Then
                Me.ActualizarCampaniaWSOperationCompleted = AddressOf Me.OnActualizarCampaniaWSOperationCompleted
            End If
            Me.InvokeAsync("ActualizarCampaniaWS", New Object() {infoCampania}, Me.ActualizarCampaniaWSOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarCampaniaWSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarCampaniaWSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarCampaniaWSCompleted(Me, New ActualizarCampaniaWSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/CargarInformacionTipoServicio", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargarInformacionTipoServicio(ByRef dsReporte As System.Data.DataSet, ByRef estado As Boolean) As ResultadoProceso
            Dim results() As Object = Me.Invoke("CargarInformacionTipoServicio", New Object() {dsReporte, estado})
            dsReporte = CType(results(1),System.Data.DataSet)
            estado = CType(results(2),Boolean)
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargarInformacionTipoServicioAsync(ByVal dsReporte As System.Data.DataSet, ByVal estado As Boolean)
            Me.CargarInformacionTipoServicioAsync(dsReporte, estado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargarInformacionTipoServicioAsync(ByVal dsReporte As System.Data.DataSet, ByVal estado As Boolean, ByVal userState As Object)
            If (Me.CargarInformacionTipoServicioOperationCompleted Is Nothing) Then
                Me.CargarInformacionTipoServicioOperationCompleted = AddressOf Me.OnCargarInformacionTipoServicioOperationCompleted
            End If
            Me.InvokeAsync("CargarInformacionTipoServicio", New Object() {dsReporte, estado}, Me.CargarInformacionTipoServicioOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargarInformacionTipoServicioOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargarInformacionTipoServicioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargarInformacionTipoServicioCompleted(Me, New CargarInformacionTipoServicioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/GuardarCodigoEstrategiaWs", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GuardarCodigoEstrategiaWs(ByVal infocampania As WsRegistroCampania) As ResultadoProceso
            Dim results() As Object = Me.Invoke("GuardarCodigoEstrategiaWs", New Object() {infocampania})
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GuardarCodigoEstrategiaWsAsync(ByVal infocampania As WsRegistroCampania)
            Me.GuardarCodigoEstrategiaWsAsync(infocampania, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GuardarCodigoEstrategiaWsAsync(ByVal infocampania As WsRegistroCampania, ByVal userState As Object)
            If (Me.GuardarCodigoEstrategiaWsOperationCompleted Is Nothing) Then
                Me.GuardarCodigoEstrategiaWsOperationCompleted = AddressOf Me.OnGuardarCodigoEstrategiaWsOperationCompleted
            End If
            Me.InvokeAsync("GuardarCodigoEstrategiaWs", New Object() {infocampania}, Me.GuardarCodigoEstrategiaWsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGuardarCodigoEstrategiaWsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GuardarCodigoEstrategiaWsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GuardarCodigoEstrategiaWsCompleted(Me, New GuardarCodigoEstrategiaWsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ActualizarCodigoEstrategiaWs", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizarCodigoEstrategiaWs(ByVal infocampania As WsRegistroCampania) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ActualizarCodigoEstrategiaWs", New Object() {infocampania})
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizarCodigoEstrategiaWsAsync(ByVal infocampania As WsRegistroCampania)
            Me.ActualizarCodigoEstrategiaWsAsync(infocampania, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarCodigoEstrategiaWsAsync(ByVal infocampania As WsRegistroCampania, ByVal userState As Object)
            If (Me.ActualizarCodigoEstrategiaWsOperationCompleted Is Nothing) Then
                Me.ActualizarCodigoEstrategiaWsOperationCompleted = AddressOf Me.OnActualizarCodigoEstrategiaWsOperationCompleted
            End If
            Me.InvokeAsync("ActualizarCodigoEstrategiaWs", New Object() {infocampania}, Me.ActualizarCodigoEstrategiaWsOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarCodigoEstrategiaWsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarCodigoEstrategiaWsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarCodigoEstrategiaWsCompleted(Me, New ActualizarCodigoEstrategiaWsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/EliminarCodigoEstrategiaWs", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarCodigoEstrategiaWs(ByVal infocampania As WsRegistroCampania) As ResultadoProceso
            Dim results() As Object = Me.Invoke("EliminarCodigoEstrategiaWs", New Object() {infocampania})
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarCodigoEstrategiaWsAsync(ByVal infocampania As WsRegistroCampania)
            Me.EliminarCodigoEstrategiaWsAsync(infocampania, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarCodigoEstrategiaWsAsync(ByVal infocampania As WsRegistroCampania, ByVal userState As Object)
            If (Me.EliminarCodigoEstrategiaWsOperationCompleted Is Nothing) Then
                Me.EliminarCodigoEstrategiaWsOperationCompleted = AddressOf Me.OnEliminarCodigoEstrategiaWsOperationCompleted
            End If
            Me.InvokeAsync("EliminarCodigoEstrategiaWs", New Object() {infocampania}, Me.EliminarCodigoEstrategiaWsOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarCodigoEstrategiaWsOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarCodigoEstrategiaWsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarCodigoEstrategiaWsCompleted(Me, New EliminarCodigoEstrategiaWsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/AsociarCodigoEstrategiaWs", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AsociarCodigoEstrategiaWs(ByVal infocampania As WsRegistroCampania) As ResultadoProceso
            Dim results() As Object = Me.Invoke("AsociarCodigoEstrategiaWs", New Object() {infocampania})
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AsociarCodigoEstrategiaWsAsync(ByVal infocampania As WsRegistroCampania)
            Me.AsociarCodigoEstrategiaWsAsync(infocampania, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AsociarCodigoEstrategiaWsAsync(ByVal infocampania As WsRegistroCampania, ByVal userState As Object)
            If (Me.AsociarCodigoEstrategiaWsOperationCompleted Is Nothing) Then
                Me.AsociarCodigoEstrategiaWsOperationCompleted = AddressOf Me.OnAsociarCodigoEstrategiaWsOperationCompleted
            End If
            Me.InvokeAsync("AsociarCodigoEstrategiaWs", New Object() {infocampania}, Me.AsociarCodigoEstrategiaWsOperationCompleted, userState)
        End Sub
        
        Private Sub OnAsociarCodigoEstrategiaWsOperationCompleted(ByVal arg As Object)
            If (Not (Me.AsociarCodigoEstrategiaWsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AsociarCodigoEstrategiaWsCompleted(Me, New AsociarCodigoEstrategiaWsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.logytechmobile.com/NotusIlsWebService/ConsultarCiudadesCampania", RequestNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", ResponseNamespace:="http://www.logytechmobile.com/NotusIlsWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCiudadesCampania(ByRef dsDatos As System.Data.DataSet, ByVal idCampania As Integer) As ResultadoProceso
            Dim results() As Object = Me.Invoke("ConsultarCiudadesCampania", New Object() {dsDatos, idCampania})
            dsDatos = CType(results(1),System.Data.DataSet)
            Return CType(results(0),ResultadoProceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCiudadesCampaniaAsync(ByVal dsDatos As System.Data.DataSet, ByVal idCampania As Integer)
            Me.ConsultarCiudadesCampaniaAsync(dsDatos, idCampania, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCiudadesCampaniaAsync(ByVal dsDatos As System.Data.DataSet, ByVal idCampania As Integer, ByVal userState As Object)
            If (Me.ConsultarCiudadesCampaniaOperationCompleted Is Nothing) Then
                Me.ConsultarCiudadesCampaniaOperationCompleted = AddressOf Me.OnConsultarCiudadesCampaniaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCiudadesCampania", New Object() {dsDatos, idCampania}, Me.ConsultarCiudadesCampaniaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCiudadesCampaniaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCiudadesCampaniaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCiudadesCampaniaCompleted(Me, New ConsultarCiudadesCampaniaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.logytechmobile.com/NotusIlsWebService/")>  _
    Partial Public Class WsFiltroCampania
        
        Private idCampaniaField As Integer
        
        Private nombreCampaniaField As String
        
        Private activoField As System.Nullable(Of Boolean)
        
        Private listaTipoServicioField() As Object
        
        Private idTipoServicioField As TipoServicio
        
        Private idClienteExternoField As Integer
        
        Private idEmpresaField As Integer
        
        '''<remarks/>
        Public Property IdCampania() As Integer
            Get
                Return Me.idCampaniaField
            End Get
            Set
                Me.idCampaniaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NombreCampania() As String
            Get
                Return Me.nombreCampaniaField
            End Get
            Set
                Me.nombreCampaniaField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Activo() As System.Nullable(Of Boolean)
            Get
                Return Me.activoField
            End Get
            Set
                Me.activoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListaTipoServicio() As Object()
            Get
                Return Me.listaTipoServicioField
            End Get
            Set
                Me.listaTipoServicioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdTipoServicio() As TipoServicio
            Get
                Return Me.idTipoServicioField
            End Get
            Set
                Me.idTipoServicioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdClienteExterno() As Integer
            Get
                Return Me.idClienteExternoField
            End Get
            Set
                Me.idClienteExternoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdEmpresa() As Integer
            Get
                Return Me.idEmpresaField
            End Get
            Set
                Me.idEmpresaField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.logytechmobile.com/NotusIlsWebService/")>  _
    Partial Public Class WsRegistroCampania
        
        Private idCampaniaField As Integer
        
        Private nombreField As String
        
        Private fechaInicioField As Date
        
        Private fechaFinGestionCalField As Date
        
        Private fechaFinGestionCemField As Date
        
        Private fechaFinRadicadoField As Date
        
        Private activoField As Boolean
        
        Private metaClienteField As Integer
        
        Private metaCallcenterField As Integer
        
        Private fechaLlegadaField As String
        
        Private listCiudadesField() As Integer
        
        Private listBodegasField() As Integer
        
        Private listProductoExternoField() As Integer
        
        Private listDocumentoFinancieroField() As Integer
        
        Private listTiposDeServicioField() As Integer
        
        Private idClienteExternoField As Integer
        
        Private idEmpresaField As Integer
        
        Private idTipoCampaniaField As Integer
        
        Private idSistemaField As Integer
        
        Private codEstrategiaField As String
        
        Private codigoEstrategiaActualizarField As String
        
        '''<remarks/>
        Public Property IdCampania() As Integer
            Get
                Return Me.idCampaniaField
            End Get
            Set
                Me.idCampaniaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FechaInicio() As Date
            Get
                Return Me.fechaInicioField
            End Get
            Set
                Me.fechaInicioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FechaFinGestionCal() As Date
            Get
                Return Me.fechaFinGestionCalField
            End Get
            Set
                Me.fechaFinGestionCalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FechaFinGestionCem() As Date
            Get
                Return Me.fechaFinGestionCemField
            End Get
            Set
                Me.fechaFinGestionCemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FechaFinRadicado() As Date
            Get
                Return Me.fechaFinRadicadoField
            End Get
            Set
                Me.fechaFinRadicadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Activo() As Boolean
            Get
                Return Me.activoField
            End Get
            Set
                Me.activoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MetaCliente() As Integer
            Get
                Return Me.metaClienteField
            End Get
            Set
                Me.metaClienteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MetaCallcenter() As Integer
            Get
                Return Me.metaCallcenterField
            End Get
            Set
                Me.metaCallcenterField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FechaLlegada() As String
            Get
                Return Me.fechaLlegadaField
            End Get
            Set
                Me.fechaLlegadaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListCiudades() As Integer()
            Get
                Return Me.listCiudadesField
            End Get
            Set
                Me.listCiudadesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListBodegas() As Integer()
            Get
                Return Me.listBodegasField
            End Get
            Set
                Me.listBodegasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListProductoExterno() As Integer()
            Get
                Return Me.listProductoExternoField
            End Get
            Set
                Me.listProductoExternoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListDocumentoFinanciero() As Integer()
            Get
                Return Me.listDocumentoFinancieroField
            End Get
            Set
                Me.listDocumentoFinancieroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListTiposDeServicio() As Integer()
            Get
                Return Me.listTiposDeServicioField
            End Get
            Set
                Me.listTiposDeServicioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdClienteExterno() As Integer
            Get
                Return Me.idClienteExternoField
            End Get
            Set
                Me.idClienteExternoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdEmpresa() As Integer
            Get
                Return Me.idEmpresaField
            End Get
            Set
                Me.idEmpresaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdTipoCampania() As Integer
            Get
                Return Me.idTipoCampaniaField
            End Get
            Set
                Me.idTipoCampaniaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdSistema() As Integer
            Get
                Return Me.idSistemaField
            End Get
            Set
                Me.idSistemaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodEstrategia() As String
            Get
                Return Me.codEstrategiaField
            End Get
            Set
                Me.codEstrategiaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodigoEstrategiaActualizar() As String
            Get
                Return Me.codigoEstrategiaActualizarField
            End Get
            Set
                Me.codigoEstrategiaActualizarField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.logytechmobile.com/NotusIlsWebService/")>  _
    Partial Public Class WsInfoDisponibilidad
        
        Private idCampaniaField As Integer
        
        Private codigoDocumentoField As String
        
        Private idCiudadField As Integer
        
        Private listProductosField() As Integer
        
        '''<remarks/>
        Public Property IdCampania() As Integer
            Get
                Return Me.idCampaniaField
            End Get
            Set
                Me.idCampaniaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodigoDocumento() As String
            Get
                Return Me.codigoDocumentoField
            End Get
            Set
                Me.codigoDocumentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdCiudad() As Integer
            Get
                Return Me.idCiudadField
            End Get
            Set
                Me.idCiudadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListProductos() As Integer()
            Get
                Return Me.listProductosField
            End Get
            Set
                Me.listProductosField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.logytechmobile.com/NotusIlsWebService/")>  _
    Partial Public Class WsInfoCapacidadEntrega
        
        Private idRegistroField As Integer
        
        Private idEmpresaField As Integer
        
        Private idBodegaField As Integer
        
        Private idCiudadField As Integer
        
        Private fechaInicialField As Date
        
        Private fechaFinalField As Date
        
        Private idJornadaField As Integer
        
        Private idAgrupacionField As Integer
        
        Private idCampaniaField As Integer
        
        '''<remarks/>
        Public Property IdRegistro() As Integer
            Get
                Return Me.idRegistroField
            End Get
            Set
                Me.idRegistroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdEmpresa() As Integer
            Get
                Return Me.idEmpresaField
            End Get
            Set
                Me.idEmpresaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdBodega() As Integer
            Get
                Return Me.idBodegaField
            End Get
            Set
                Me.idBodegaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdCiudad() As Integer
            Get
                Return Me.idCiudadField
            End Get
            Set
                Me.idCiudadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FechaInicial() As Date
            Get
                Return Me.fechaInicialField
            End Get
            Set
                Me.fechaInicialField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FechaFinal() As Date
            Get
                Return Me.fechaFinalField
            End Get
            Set
                Me.fechaFinalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdJornada() As Integer
            Get
                Return Me.idJornadaField
            End Get
            Set
                Me.idJornadaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdAgrupacion() As Integer
            Get
                Return Me.idAgrupacionField
            End Get
            Set
                Me.idAgrupacionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdCampania() As Integer
            Get
                Return Me.idCampaniaField
            End Get
            Set
                Me.idCampaniaField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.logytechmobile.com/NotusIlsWebService/")>  _
    Partial Public Class WsRegistroServicioMensajeriaEmergia
        
        Private idServicioMensajeriaField As Long
        
        Private fechaAgendaField As Date
        
        Private idJornadaField As Integer
        
        Private idCiudadField As Integer
        
        Private direccionField As String
        
        Private telefonoField As String
        
        Private observacionField As String
        
        Private telefonoFijoField As String
        
        '''<remarks/>
        Public Property IdServicioMensajeria() As Long
            Get
                Return Me.idServicioMensajeriaField
            End Get
            Set
                Me.idServicioMensajeriaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FechaAgenda() As Date
            Get
                Return Me.fechaAgendaField
            End Get
            Set
                Me.fechaAgendaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdJornada() As Integer
            Get
                Return Me.idJornadaField
            End Get
            Set
                Me.idJornadaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdCiudad() As Integer
            Get
                Return Me.idCiudadField
            End Get
            Set
                Me.idCiudadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Direccion() As String
            Get
                Return Me.direccionField
            End Get
            Set
                Me.direccionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Telefono() As String
            Get
                Return Me.telefonoField
            End Get
            Set
                Me.telefonoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Observacion() As String
            Get
                Return Me.observacionField
            End Get
            Set
                Me.observacionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TelefonoFijo() As String
            Get
                Return Me.telefonoFijoField
            End Get
            Set
                Me.telefonoFijoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.logytechmobile.com/NotusIlsWebService/")>  _
    Partial Public Class WsRegistroServicioMensajeria
        
        Private idServicioMensajeriaField As Long
        
        Private fechaAgendaField As Date
        
        Private idJornadaField As Integer
        
        Private idEmpresaField As Integer
        
        Private idEstadoField As EstadoServicio
        
        Private nombreField As String
        
        Private identicacionField As String
        
        Private idCiudadField As Integer
        
        Private direccionField As String
        
        Private telefonoField As String
        
        Private idCampaniaField As Integer
        
        Private idTipoServicioField As Integer
        
        Private listProductosField() As Integer
        
        Private listTipoServicioField() As String
        
        Private listCupoProductoField() As String
        
        Private actividadLaboralField As String
        
        Private observacionField As String
        
        Private codOficinaClienteField As String
        
        Private telefonoFijoField As String
        
        Private nombresCompletoField As String
        
        Private primerApellidoField As String
        
        Private segundoApellidoField As String
        
        Private codigoEstrategiaComercialField As String
        
        Private sexoField As String
        
        Private celularField As String
        
        Private telefonoAdicionalField As String
        
        Private codigoAgenteVendedorField As String
        
        Private correoField As String
        
        '''<remarks/>
        Public Property IdServicioMensajeria() As Long
            Get
                Return Me.idServicioMensajeriaField
            End Get
            Set
                Me.idServicioMensajeriaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FechaAgenda() As Date
            Get
                Return Me.fechaAgendaField
            End Get
            Set
                Me.fechaAgendaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdJornada() As Integer
            Get
                Return Me.idJornadaField
            End Get
            Set
                Me.idJornadaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdEmpresa() As Integer
            Get
                Return Me.idEmpresaField
            End Get
            Set
                Me.idEmpresaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdEstado() As EstadoServicio
            Get
                Return Me.idEstadoField
            End Get
            Set
                Me.idEstadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Identicacion() As String
            Get
                Return Me.identicacionField
            End Get
            Set
                Me.identicacionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdCiudad() As Integer
            Get
                Return Me.idCiudadField
            End Get
            Set
                Me.idCiudadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Direccion() As String
            Get
                Return Me.direccionField
            End Get
            Set
                Me.direccionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Telefono() As String
            Get
                Return Me.telefonoField
            End Get
            Set
                Me.telefonoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdCampania() As Integer
            Get
                Return Me.idCampaniaField
            End Get
            Set
                Me.idCampaniaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdTipoServicio() As Integer
            Get
                Return Me.idTipoServicioField
            End Get
            Set
                Me.idTipoServicioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListProductos() As Integer()
            Get
                Return Me.listProductosField
            End Get
            Set
                Me.listProductosField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListTipoServicio() As String()
            Get
                Return Me.listTipoServicioField
            End Get
            Set
                Me.listTipoServicioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListCupoProducto() As String()
            Get
                Return Me.listCupoProductoField
            End Get
            Set
                Me.listCupoProductoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ActividadLaboral() As String
            Get
                Return Me.actividadLaboralField
            End Get
            Set
                Me.actividadLaboralField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Observacion() As String
            Get
                Return Me.observacionField
            End Get
            Set
                Me.observacionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodOficinaCliente() As String
            Get
                Return Me.codOficinaClienteField
            End Get
            Set
                Me.codOficinaClienteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TelefonoFijo() As String
            Get
                Return Me.telefonoFijoField
            End Get
            Set
                Me.telefonoFijoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NombresCompleto() As String
            Get
                Return Me.nombresCompletoField
            End Get
            Set
                Me.nombresCompletoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrimerApellido() As String
            Get
                Return Me.primerApellidoField
            End Get
            Set
                Me.primerApellidoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SegundoApellido() As String
            Get
                Return Me.segundoApellidoField
            End Get
            Set
                Me.segundoApellidoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodigoEstrategiaComercial() As String
            Get
                Return Me.codigoEstrategiaComercialField
            End Get
            Set
                Me.codigoEstrategiaComercialField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Sexo() As String
            Get
                Return Me.sexoField
            End Get
            Set
                Me.sexoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Celular() As String
            Get
                Return Me.celularField
            End Get
            Set
                Me.celularField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TelefonoAdicional() As String
            Get
                Return Me.telefonoAdicionalField
            End Get
            Set
                Me.telefonoAdicionalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodigoAgenteVendedor() As String
            Get
                Return Me.codigoAgenteVendedorField
            End Get
            Set
                Me.codigoAgenteVendedorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Correo() As String
            Get
                Return Me.correoField
            End Get
            Set
                Me.correoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.logytechmobile.com/NotusIlsWebService/")>  _
    Public Enum EstadoServicio
        
        '''<remarks/>
        EnCuarentena
        
        '''<remarks/>
        Creado
        
        '''<remarks/>
        Confirmado
        
        '''<remarks/>
        Despachado
        
        '''<remarks/>
        Entregado
        
        '''<remarks/>
        Cerrado
        
        '''<remarks/>
        DespachadoCambio
        
        '''<remarks/>
        Legalizado
        
        '''<remarks/>
        Transito
        
        '''<remarks/>
        Devolucion
        
        '''<remarks/>
        AsignadoRuta
        
        '''<remarks/>
        RecibidoCliente
        
        '''<remarks/>
        RecibidoST
        
        '''<remarks/>
        RevisionServicioTecnico
        
        '''<remarks/>
        ServicioTecnico
        
        '''<remarks/>
        Preventa
        
        '''<remarks/>
        Anulado
        
        '''<remarks/>
        Radicado
        
        '''<remarks/>
        DevueltoCallCenter
        
        '''<remarks/>
        PendienteRecoleccion
        
        '''<remarks/>
        PendienteCierre
        
        '''<remarks/>
        Entregadoalegalizacion
        
        '''<remarks/>
        AnuladoPorSistemaDevCallCenter
        
        '''<remarks/>
        AnuladoPorSistemaPreventa
        
        '''<remarks/>
        AnuladoDevCallCenter
        
        '''<remarks/>
        AnuladoPreventa
        
        '''<remarks/>
        GestionadoConNovedadEnContacto
        
        '''<remarks/>
        SerialesAsignados
        
        '''<remarks/>
        Facturado
        
        '''<remarks/>
        Asignadoaresponsable
        
        '''<remarks/>
        RecuperacionMesaControl
        
        '''<remarks/>
        PendienteAprobacionCalidad
        
        '''<remarks/>
        RechazadoCalidadContactCenter
        
        '''<remarks/>
        VerificacionMesaControl
        
        '''<remarks/>
        RadicadoBanco
        
        '''<remarks/>
        CampaniaFinalizada
        
        '''<remarks/>
        RechazadoBanco
        
        '''<remarks/>
        RechazadoMesaControl
        
        '''<remarks/>
        DestruccionDocumentosMC
        
        '''<remarks/>
        Recogido
        
        '''<remarks/>
        Reagendado
        
        '''<remarks/>
        EntregaParcial
        
        '''<remarks/>
        NoCobertura
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.logytechmobile.com/NotusIlsWebService/")>  _
    Partial Public Class ResultadoProceso
        
        Private valorField As Long
        
        Private mensajeField As String
        
        '''<remarks/>
        Public Property Valor() As Long
            Get
                Return Me.valorField
            End Get
            Set
                Me.valorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mensaje() As String
            Get
                Return Me.mensajeField
            End Get
            Set
                Me.mensajeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.logytechmobile.com/NotusIlsWebService/")>  _
    Public Enum TipoServicio
        
        '''<remarks/>
        Reposicion
        
        '''<remarks/>
        Venta
        
        '''<remarks/>
        CesionContrato
        
        '''<remarks/>
        Migracion
        
        '''<remarks/>
        ServicioTecnico
        
        '''<remarks/>
        Portacion
        
        '''<remarks/>
        OrdenCompra
        
        '''<remarks/>
        Siembra
        
        '''<remarks/>
        VentaWeb
        
        '''<remarks/>
        ServiciosFinancieros
        
        '''<remarks/>
        VentaEDUCLIC
        
        '''<remarks/>
        VentaCorporativa
        
        '''<remarks/>
        CampañaClaroFijo
        
        '''<remarks/>
        TiendaVirtual
        
        '''<remarks/>
        VentaCorporativaPrestamo
        
        '''<remarks/>
        EquiposReparadosST
        
        '''<remarks/>
        ServiciosFinancierosBancolombia
        
        '''<remarks/>
        ServiciosFinancierosDavivienda
        
        '''<remarks/>
        DaviviendaSamsung
        
        '''<remarks/>
        Servicios_Financieros_Davivienda_AM_PM
        
        '''<remarks/>
        MercadoNaturalFeria
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConsultarCampaniasCEMCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCampaniasCEMCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCampaniasCEMCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsReporte() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub RegistrarServicioWSCompletedEventHandler(ByVal sender As Object, ByVal e As RegistrarServicioWSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistrarServicioWSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idServicio() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ActualizarServicioWSCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarServicioWSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizarServicioWSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ActualizarServicioWSeMergiaCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarServicioWSeMergiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizarServicioWSeMergiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub AgregarReferenciasCompletedEventHandler(ByVal sender As Object, ByVal e As AgregarReferenciasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AgregarReferenciasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub EliminarReferenciasCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarReferenciasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarReferenciasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConsultarCapacidadEntregaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCapacidadEntregaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCapacidadEntregaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsCantidad() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConsultarDisponibilidadDocumentosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDisponibilidadDocumentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDisponibilidadDocumentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsDisponibilidad() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ValidaRegistrosServicioWSCompletedEventHandler(ByVal sender As Object, ByVal e As ValidaRegistrosServicioWSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidaRegistrosServicioWSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConsultarClientesExternosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarClientesExternosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarClientesExternosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsReporte() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property estado() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idEmpresa() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConsultarBodegasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarBodegasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarBodegasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsDatos() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConsultarProductosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarProductosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarProductosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsDatos() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConsultarTipoCampaniasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarTipoCampaniasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarTipoCampaniasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsReporte() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property estado() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConsultarServiciosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarServiciosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarServiciosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsReporte() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property _esFinanciero() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConsultarDocumentosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDocumentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDocumentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsReporte() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConsultarCampaniaBodegaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCampaniaBodegaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCampaniaBodegaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsDatos() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idCampania() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConsultarCampaniaProductoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCampaniaProductoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCampaniaProductoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsDatos() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idCampania() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property tipoProducto() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConsultarCampaniaDocumentoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCampaniaDocumentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCampaniaDocumentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsDatos() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idCampania() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub RegistrarCampaniaWSCompletedEventHandler(ByVal sender As Object, ByVal e As RegistrarCampaniaWSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistrarCampaniaWSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ActualizarCampaniaWSCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarCampaniaWSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizarCampaniaWSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub CargarInformacionTipoServicioCompletedEventHandler(ByVal sender As Object, ByVal e As CargarInformacionTipoServicioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargarInformacionTipoServicioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsReporte() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property estado() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GuardarCodigoEstrategiaWsCompletedEventHandler(ByVal sender As Object, ByVal e As GuardarCodigoEstrategiaWsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GuardarCodigoEstrategiaWsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ActualizarCodigoEstrategiaWsCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarCodigoEstrategiaWsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizarCodigoEstrategiaWsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub EliminarCodigoEstrategiaWsCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarCodigoEstrategiaWsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarCodigoEstrategiaWsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub AsociarCodigoEstrategiaWsCompletedEventHandler(ByVal sender As Object, ByVal e As AsociarCodigoEstrategiaWsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AsociarCodigoEstrategiaWsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ConsultarCiudadesCampaniaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCiudadesCampaniaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCiudadesCampaniaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoProceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoProceso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsDatos() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
